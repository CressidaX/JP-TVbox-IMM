name: Build ImmortalWrt for JP-TVbox

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  CONFIG_FILE: JP-TVbox/.config
  DIY_SH: JP-TVbox/diy.sh
  FILES: JP-TVbox/files
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Free up space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: Initialize environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update -y
        sudo -E apt-get -qq install -y $(curl -fsSL https://raw.githubusercontent.com/nantayo/My-Pkg/master/2305)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        git clone $REPO_URL -b $REPO_BRANCH --single-branch --depth=1 openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load custom config
      run: |
        [ -e $FILES ] && mv $FILES openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SH

    - name: SSH connect to Actions
      uses: P3TERX/ssh2actions@main
      if: (github.event.inputs.ssh == 'true') || contains(github.event.action, 'ssh')

    - name: Download package
      working-directory: ./openwrt
      run: |
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        chmod -R 755 openwrt
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_OUTPUT
        echo "compile_status=success" >> $GITHUB_ENV

    - name: Check firmware directory
      if: steps.compile.outputs.status == 'success'
      run: |
        cd openwrt/bin/targets/
        echo "::group::Directory Content"
        ls -R
        echo "::endgroup::"
        if find . -type f -name "*.tar.gz" | grep -q .; then
          echo "FIRMWARE_FOUND=true" >> $GITHUB_ENV
          echo "Found firmware files"
        else
          echo "FIRMWARE_FOUND=false" >> $GITHUB_ENV
          echo "No firmware files found"
          exit 1
        fi

    - name: Package armsr as openwrt
      if: env.compile_status == 'success' && env.FIRMWARE_FOUND == 'true' && !cancelled()
      uses: unifreq/openwrt_packit@master
      env:
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
        KERNEL_VERSION_NAME: 6.6.60
        KERNEL_AUTO_LATEST: true
        PACKAGE_SOC: diy
        GZIP_IMGS: .xz
        SCRIPT_DIY_PATH: JP-TVbox/mk_rk3566_jp-tvbox.sh
        WHOAMI: Jumbotsang
        SW_FLOWOFFLOAD: 0
        SFE_FLOW: 0

    - name: Generate release tag
      if: env.PACKAGED_STATUS == 'success' && !cancelled()
      run: |
        echo "RELEASE_TAG=OpenWrt_$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_ENV

    - name: Upload firmware to release
      uses: softprops/action-gh-release@master
      if: env.PACKAGED_STATUS == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_TAG }}
        files: ${{ env.PACKAGED_OUTPUTPATH }}/*.img.xz
        body: |
          首次使用建议全新刷写
          * 基本信息
          IP: 192.168.50.2
          账户: root
          密码: password
          
          * 编译信息
          编译时间: ${{ env.RELEASE_TAG }}
          固件源码: ${{ env.REPO_URL }}
          源码分支: ${{ env.REPO_BRANCH }}
          内核版本: ${{ env.KERNEL_VERSION_NAME }}

    - name: Delete old releases
      uses: dev-drprasad/delete-older-releases@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        keep_latest: 2
        delete_tags: true

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 1
        keep_minimum_runs: 3
